apiVersion: apps/v1
kind: Deployment
metadata:
  name: netbox-postgres
  namespace: netbox
  lables:
    app: netbox
  annotations:
    app.kubernetes.io/component: postgress
    app.kubernetes.io/instance: netbox
    app.kubernetes.io/part-of: netbox
    image.openshift.io/triggers: >-
          [{"from":{"kind":"ImageStreamTag","name":"postgresql:10-el8","namespace":"openshift"},"fieldPath":"spec.template.spec.containers[?(@.name==\"postgresql\")].image"}]

spec:
  replicas: 1
  revisionHistoryLimit: 5
  selector:
    matchLabels:
      deployment: netbox-postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        deployment: netbox-postgres
      annotations:
        app.kubernetes.io/component: postgress
        app.kubernetes.io/instance: netbox
        app.kubernetes.io/part-of: netbox
    spec:
      containers:
      - env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              key: database-user
              name: netbox-postgres
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-password
              name: netbox-postgres
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: netbox-postgres
        imagePullPolicy: IfNotPresent
        image: postgresql:10-el8
        livenessProbe:
          exec:
            command:
            - /usr/libexec/check-container
            - --live
          failureThreshold: 3
          initialDelaySeconds: 120
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 10
        name: postgresql
        ports:
        - containerPort: 5432
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /usr/libexec/check-container
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 500M
            cpu: 50m
          requests:
            memory: 100M
            cpu: 10m
        securityContext:
          capabilities: {}
          privileged: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/pgsql/data
          name: netbox-postgres-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: netbox-postgres-data
        persistentVolumeClaim:
          claimName: netbox-postgres