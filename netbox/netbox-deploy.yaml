apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: netbox
  annotations:
    app.kubernetes.io/component: netbox
    app.kubernetes.io/instance: netbox
    app.kubernetes.io/part-of: netbox
    image.openshift.io/triggers: >-
          [{"from":{"kind":"ImageStreamTag","name":"netbox-custom:latest"},"fieldPath":"spec.template.spec.containers[?(@.name==\"netbox\")].image"}]

  namespace: netbox
  name: netbox
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      deployment: netbox
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: netbox
        deployment: netbox
    spec:
      containers:
        - env:
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: netbox-postgres
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: netbox-postgres
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: netbox-postgres
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: netbox-redis
          envFrom:
            - configMapRef:
                name: netbox-config
            - secretRef:
                name: netbox-secrets
          image: netbox-custom:latest
          imagePullPolicy: IfNotPresent
          name: netbox
          ports:
            - containerPort: 8080
              protocol: TCP
              name: http-alt
          resources:
            limits:
              memory: 500M
              cpu: 50m
            requests:
              memory: 256M
              cpu: 20m
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /etc/netbox/media
              name: netbox-media-data
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: netbox-media-data
          persistentVolumeClaim:
            claimName: netbox-media
